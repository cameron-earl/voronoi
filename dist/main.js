!function(t){var e={};function n(i){if(e[i])return e[i].exports;var s=e[i]={i:i,l:!1,exports:{}};return t[i].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)n.d(i,s,function(e){return t[e]}.bind(null,s));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){const{randInt:i}=n(1),{Point:s,Triangle:r,Segment:o,Ray:c,Line:l,sortPoints:h}=n(2),a=15,u=0,y=0,p=1200,f=900,g=p-u,x=f-y,m=10,d=document.querySelector("canvas").getContext("2d");!function(){d.canvas.width=g,d.canvas.height=x,d.canvas.style.backgroundColor="lime";const t=new Array(a).fill(null).map(t=>new s(i(u+m,p-m),i(y+m,f-m))).sort((t,e)=>t.x-e.x||t.y-e.y).filter((t,e,n)=>!e||t.x!==n[e-1].x||t.y!==n[e-1].y);(function(t,e){d.beginPath(),d.fillStyle=e||"green";for(let e of t)d.moveTo(e.x,e.y),d.arc(e.x,e.y,3,0,2*Math.PI);d.closePath(),d.fill()})(t),console.log(t,t.length);const e=function(t){const e=Number.MAX_SAFE_INTEGER/2,n=[new s(u-e,f+e),new s(u+g/2,y-e),new s(p+e,f+e)];let i=[new r(...n)];for(let e of t){const t=[],n=[];for(let s of i)s.circumCircle.containsPoint(e)?t.push(s):n.push(s);const s=t.reduce((t,e)=>[...t,e.p1,e.p2,e.p3],[]).sort((t,n)=>e.angleTo(t)-e.angleTo(n)||e.distanceTo(t)-e.distanceTo(n)).filter((t,e,n)=>!e||!t.equals(n[e-1])).map((t,n,i)=>new r(e,t,i[(n+1)%i.length]));i=[...n,...s]}return i=i.filter(t=>!n.some(e=>[t.p1,t.p2,t.p3].includes(e)))}(t),n=function(t){const e=[];for(let n=0;n<t.length-1;n++)for(let i=n+1;i<t.length;i++){const[s,r]=[t[n],t[i]];if(s.sharesEdge(r)){const t=new o(s.circumCircle.center,r.circumCircle.center);e.push(t)}}for(let t of e)t.display(d,"white");const n={};for(const e of t){const t=new o(e.p1,e.p2),i=new o(e.p2,e.p3),s=new o(e.p3,e.p1);for(let r of[t,i,s])n[r.toString()]?n[r.toString()].triangles.push(e):n[r.toString()]={edge:r,triangles:[e]}}const i=Object.values(n).filter(t=>1===t.triangles.length).map(t=>{const n=[t.triangles[0].circumCircle.center,t.edge.getCenter(),p,f],i=t.triangles[0].containsCircumcenter(),s=new c(...n,i);return e.reduce((t,e)=>t+!!e.getIntersect(s),0)>1?s:new c(...n,!i)});return[...e,...i]}(e);for(let t of e)console.log(t),t.display(d,"pink");for(let t of n)t.display(d,"blue")}()},function(t,e){t.exports={randInt:(t,e)=>(t=Math.ceil(t),e=Math.floor(e),Math.floor(Math.random()*(e-t+1))+t)}},function(t,e){const n=(t,e)=>t.x-e.x||t.y-e.y;class i{constructor(t,e){this.x=t,this.y=e}distanceTo(t){return Math.sqrt((t.x-this.x)**2+(t.y-this.y)**2)}angleTo(t){return Math.atan2(t.y-this.y,t.x-this.x)}compareTo(t){return this.x-t.x||this.y-t.y}equals(t){return this.x===t.x&&this.y===t.y}display(t,e="green"){t.beginPath(),t.fillStyle=e,t.moveTo(this.x,this.y),t.arc(this.x,this.y,3,0,2*Math.PI),t.closePath(),t.fill()}toString(){return`(${this.x},${this.y})`}}class s{constructor(t,e){const i=[t,e].sort(n);this.p1=i[0],this.p2=i[1],this.m=(e.y-t.y)/(e.x-t.x),this.m!==-1/0&&-0!==this.m||(this.m=Math.abs(this.m))}getCenter(){return new i((this.p1.x+this.p2.x)/2,(this.p1.y+this.p2.y)/2)}getLinePerpendicularToCenter(){const t=0===this.m?1/0:this.m===1/0?0:-1/this.m;return new r(t,this.getCenter())}getLength(){return this.p1.distanceTo(this.p2)}getIntersect(t){if(!(t instanceof s||t instanceof r))throw new Exception("Can only find intersect with other Segment or a Line");const e=new r(this),n=new r(t),i=e.getIntersect(n);return this.containsPoint(i)?i:null}containsPoint(t){const[e,n]=[this.p1,this.p2],i=(t.y-e.y)*(n.x-e.x)-(t.x-e.x)*(n.y-e.y);if(Math.abs(i)>Number.EPSILON)return!1;const s=(t.x-e.x)*(n.x-e.x)+(t.y-e.y)*(n.y-e.y);return!(s<0)&&!(s>(n.x-e.x)*(n.x-e.x)+(n.y-e.y)*(n.y-e.y))}display(t,e="blue"){t.beginPath(),t.strokeStyle=e,t.moveTo(this.p1.x,this.p1.y),t.lineTo(this.p2.x,this.p2.y),t.closePath(),t.stroke()}toString(){return this.p1.toString()+"->"+this.p2.toString()}equals(t){return this.p1.equals(t.p1)&&this.p2.equals(t.p2)}}class r{constructor(...t){if(1===t.length&&t[0]instanceof s)return new r(t[0].m,t[0].p1);if(2===t.length&&t[0]instanceof i&&t[1]instanceof i){const[e,n]=t;this.setM((n.y-e.y)/(n.x-e.x));const s=e.y-this.m*e.x;this.p=Math.abs(s)===1/0?new i(e.x,0):new i(0,s)}else if(2===t.length&&"number"==typeof t[0]&&t[1]instanceof i){this.setM(t[0]);const e=t[1].y-t[0]*t[1].x;this.p=Math.abs(e)===1/0?new i(t[1].x,0):new i(0,e)}else{if(2!=t.length||"number"!=typeof t[0]||"number"!=typeof t[1])throw console.error(t),Error("Please instantiate with Segment, two Points, slope and Point, or slope and y-intercept.");this.setM(t[0]),this.p=new i(0,t[1])}}setM(t){this.m=t===-1/0||-0===t?Math.abs(t):t}getIntersect(t){if(t.m===this.m)return null;if(this.isVertical())return t.getPointAtX(this.p.x);if(t.isVertical())return this.getPointAtX(t.p.x);const e=(t.getB()-this.getB())/(this.m-t.m),n=this.m*e+this.getB();return new i(e,n)}getPointAtX(t){if(this.isVertical())return null;if(this.isHorizontal())return new i(t,this.p.y);const e=this.m*t+this.getB();return new i(t,e)}getPointAtY(t){if(this.isHorizontal())return null;if(this.isVertical())return new i(this.p.x,t);const e=(t-this.getB())/this.m;return new i(e,t)}getB(){return this.isVertical()?null:this.p.y}isVertical(){return this.m===1/0}isHorizontal(){return 0===this.m}compare(t,e){return t.m-e.m||t.getB()-e.getB()}display(t,e="orange"){const n=this.isVertical()?this.getPointAtY(0):this.getPointAtX(0),i=this.isVertical()?this.getPointAtY(t.canvas.height):this.getPointAtX(t.canvas.width);t.beginPath(),t.strokeStyle=e,t.moveTo(n.x,n.y),t.lineTo(i.x,i.y),t.closePath(),t.stroke()}}class o{constructor(...t){if(3===t.length&&t.every(t=>t instanceof i)){const[e,n,i]=t,r=new s(e,n).getLinePerpendicularToCenter(),o=new s(n,i).getLinePerpendicularToCenter();this.l1=r,this.l2=o,this.center=r.getIntersect(o),this.radius=this.center.distanceTo(e)}else 2===t.length&&t[0]instanceof i&&"number"==typeof t[1]&&([this.center,this.radius]=t)}containsPoint(t){return this.center.distanceTo(t)<this.radius}display(t,e="rgba(255,0,0,.1)"){t.beginPath(),t.fillStyle=e,t.arc(this.center.x,this.center.y,this.radius,0,2*Math.PI),t.fill(),t.closePath()}}t.exports={Point:i,Segment:s,Ray:class extends s{constructor(t,e,n,o,c=!1){if(t.x<0||t.x>n||t.y<0||t.Y>o)return new s(new i(-1,-1),new i(-2,-2));const l=new r(t,e);let h=l.getPointAtX(e.x<t.x!==c?0:n);return(!h||h.y>o||h.y<0)&&(h=l.getPointAtY(e.y<t.y!==c?0:o)),console.log("Ray constructor",t,e,c,h),super(t,h)}},Line:r,Circle:o,Triangle:class{constructor(t,e,n){if(![t,e,n].every(t=>t instanceof i))throw console.error(t,e,n),Error("Triangle must be instantiated with three Points");this.p1=t,this.p2=e,this.p3=n,this.circumCircle=new o(t,e,n)}sharesEdge(t){let e=0;for(let n of[this.p1,this.p2,this.p3])for(let i of[t.p1,t.p2,t.p3])n.equals(i)&&e++;return 2===e}containsPoint(t){const{p1:e,p2:n,p3:i}=this,s=.5*(-n.y*i.x+e.y*(-n.x+i.x)+e.x*(n.y-i.y)+n.x*i.y),r=s<0?-1:1,o=(e.y*i.x-e.x*i.y+(i.y-e.y)*t.x+(e.x-i.x)*t.y)*r,c=(e.x*n.y-e.y*n.x+(e.y-n.y)*t.x+(n.x-e.x)*t.y)*r;return o>0&&c>0&&o+c<2*s*r}containsCircumcenter(){return this.containsPoint(this.circumCircle.center)}display(t,e="black"){t.beginPath(),t.fillStyle="rgba(255,255,0,0.5)",t.strokeStyle=e,t.moveTo(this.p1.x,this.p1.y),t.lineTo(this.p2.x,this.p2.y),t.lineTo(this.p3.x,this.p3.y),t.lineTo(this.p1.x,this.p1.y),t.closePath(),t.fill(),t.stroke()}},sortPoints:n}}]);